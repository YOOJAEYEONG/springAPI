# jackson-dataformat-yaml 의존성 추가 되어 있어야함

Configutation:
  name: Default
  # 로그 레벨은 TRACE > DEBUG > INFO > WARN > ERROR > FATAL 순이다.
  status: DEBUG
  # 60 초마다 이 구성파일을 스캔하여 변경사항을 적용 (min:5)
  monitorInterval : 60

  Properties:
    Property:
      name: log-path
      value: "/logs"

  # 로그는 console 화면, logfile.log, rollingfile.log 3개로 출력
  Appenders:
    Console:
      name: Console_Appender
      target: SYSTEM_OUT
      PatternLayout:
        pattern: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n"
    File:
      name: File_Appender
      fileName: ${log-path}/logfile.log
      PatternLayout:
        pattern: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n"
    RollingFile:
      - name: RollingFile_Appender
        fileName: ${log-path}/rollingfile.log
        filePattern: "logs/archive/rollingfile_%d{yyyy-MM-dd-hh-mm}.log.gz"
        PatternLayout:
          pattern: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n"
        Policies:
          SizeBasedTriggeringPolicy:
            size: 1 KB
        DefaultRollOverStrategy:
          max: 30

  # 패키지별로 로거 실행 계획을 다르게 설정 할 수 있다.
  Loggers:
    Root:
      level: info
      AppenderRef:
        - ref: Console_Appender
        - ref: File_Appender
        - ref: RollingFile_Appender
    Logger:
      - name: com.spring.ref.component
        additivity: false
        level: info
        AppenderRef:
          - ref: Console_Appender
          - ref: File_Appender
          - ref: RollingFile_Appender
      - name: com.spring.ref
        additivity: false
        level: debug
        AppenderRef:
          - ref: Console_Appender
          - ref: File_Appender
          - ref: RollingFile_Appender